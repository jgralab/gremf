// JGraLab - The Java graph laboratory
//   Version : unknown
//   Codename: unknown

TGraph 2;
Schema de.uni_koblenz.jgralab.testschemas.UniversitySchema;
GraphClass UniversityGraph;
Package courses;
abstract VertexClass Event { semester: organisation.Semester,  slots: List<organisation.Slot>,  year: Integer };
VertexClass Exam { date: organisation.Date,  slot: organisation.Slot } ["month in date must be between 1 and 12" "forall n: V{courses.Exam} @ n.date.month >= 1 and n.date.month < 13"];
VertexClass Lecture: Event;
VertexClass Module { number: Integer,  title: String };
VertexClass Tutorial: Event;
EdgeClass AttendsLecture: ParticipatesIn from persons.Student (1,*) role attendee to Lecture (0,*) role lecture;
EdgeClass AttendsTutorial: ParticipatesIn from persons.Student (1,*) role attendee to Tutorial (0,*) role tutorial;
EdgeClass GivesLecture: ParticipatesIn from persons.Professor (1,1) role lecturer to Lecture (0,*) role lecture;
EdgeClass HasExam from Module (1,1) role module to Exam (0,*) role exam aggregation composite;
EdgeClass HasLecture from Module (1,1) role module to Lecture (0,*) role lecture aggregation composite;
EdgeClass HasTutorial from Module (1,1) role module to Tutorial (0,*) role tutorial aggregation composite;
EdgeClass HoldsTutoral: ParticipatesIn from persons.Person (1,1) role tutor to Tutorial (0,*) role tutorialduty;
abstract EdgeClass ParticipatesIn from persons.Person (2,*) role participant to Event (0,*) role event;
EdgeClass WritesExam from persons.Student (0,*) role examinee to Exam (0,*) role exam { mark: Integer };
Package organisation;
EnumDomain Building ( A, B, C, D, E, F, G, H, K, M );
RecordDomain Date ( day: Integer, month: Integer, year: Integer );
EnumDomain DayOfWeek ( MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY );
EnumDomain Semester ( SS, WS );
RecordDomain Slot ( building: Building, dayOfWeek: DayOfWeek, hours: Integer, roomNumber: Integer, startHour: Integer );
Package persons;
VertexClass Assistant: Person;
abstract VertexClass Person { name: String };
VertexClass Professor: Person;
VertexClass Student: Person { matriculationNumber: Integer };
Graph "UniversityKoblenzGraph" 34 UniversityGraph (40 60 8 9);
Package persons;
1 Student <4 7 9> 2110001 "Harry Smith";
2 Student <5> 2110002 "John Doe";
3 Professor <3> "Rudolph Right";
4 Assistant <6> "Hugo Clareson";
Package courses;
5 Module <1 2 8> 124001 "Programming";
6 Lecture <-1 -3 -4 -5> WS [(B MONDAY 2 17 8) (C THURSDAY 2 15 12)] 2011;
7 Tutorial <-2 -6 -7> WS [(M TUESDAY 2 210 16)] 2011;
8 Exam <-8 -9> (20 -200 2012) (D MONDAY 2 28 10);
1 HasLecture;
2 HasTutorial;
3 GivesLecture;
4 AttendsLecture;
5 AttendsLecture;
6 HoldsTutoral;
7 AttendsTutorial;
8 HasExam;
9 WritesExam 2;
